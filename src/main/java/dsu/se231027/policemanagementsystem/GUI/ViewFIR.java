/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dsu.se231027.policemanagementsystem.GUI;

import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Hamza Nizamani
 */
public class ViewFIR extends javax.swing.JFrame {
    
    private DefaultTableModel FIRModel;
    
    final private String defaultCSVPathFIR = "data.csv";

    
    public boolean debug = true;
    /**
     * Creates new form ViewFIR
     */
    public ViewFIR() { // constructor
        FIRModel = new DefaultTableModel();
        initComponents();
        startChecks();
    }
    
    public final void startChecks() {
        checkAndCreateFiles();
        loadDefaultTable();
    }
    
    private void loadDefaultTable() {
        File defaultCSVPayroll = new File(defaultCSVPathFIR);
        loadCSVFile(defaultCSVPayroll, FIRModel);
    }
    
    private void checkAndCreateFiles() {
        checkAndCreateFile(defaultCSVPathFIR, "Case No,Name,CNIC,Type,Date of Incident, Location, Description");
    }

    private static void checkAndCreateFile(String filePath, String header) {
        File file = new File(filePath);

        if (!file.exists()) {
            try (FileWriter writer = new FileWriter(file)) {
                writer.write(header);
                System.out.println("File created: " + filePath);
            } catch (IOException e) {
                System.err.println("Error creating file: " + filePath);
            }
        } else {
            System.out.println("File already exists: " + filePath);
        }
    }
    
    private void addNewRow(DefaultTableModel Model) {
        Object[] emptyRow = new Object[Model.getColumnCount()];
        Model.addRow(emptyRow);
    }
    private void saveCSVFile(File file, DefaultTableModel tableModel) {
        try (PrintWriter writer = new PrintWriter(file)) {
            for (int i = 0; i < tableModel.getColumnCount(); i++) {
                writer.print(tableModel.getColumnName(i));
                if (i < tableModel.getColumnCount() - 1) {
                    writer.print(",");
                }
            }
            writer.println();
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                for (int j = 0; j < tableModel.getColumnCount(); j++) {
                    if (tableModel.getValueAt(i, j) != null) {
                        writer.print(tableModel.getValueAt(i, j));
                    } else {
                        writer.print("");
                    }
                    if (j < tableModel.getColumnCount() - 1) {
                        writer.print(",");
                    }
                }
                writer.println();
            }
            JOptionPane.showMessageDialog(this, "Updated Sucessfully!");
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saving the CSV file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void loadCSVFile(File file, DefaultTableModel DefRatesModel) {
        
        DefRatesModel.setColumnCount(0); // Clear previous columns
        DefRatesModel.setRowCount(0); // Clear previous data rows

        try (Scanner scanner = new Scanner(file)) {
            if (scanner.hasNextLine()) {
                String[] tableNames = scanner.nextLine().split(",");
                for (String tableName : tableNames) {
                    DefRatesModel.addColumn(tableName);
                    if (debug)
                        System.out.println(tableName);
                }
            }

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] data = line.split(",");
                DefRatesModel.addRow(data);
                if (debug)
                    System.out.println("->" + line);
            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error reading the CSV file.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Header10 = new javax.swing.JPanel();
        TitleText10 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        ButtonCancel10 = new javax.swing.JButton();
        ButtonMakeFile = new javax.swing.JButton();
        EmpDataTable = new javax.swing.JTable();
        ButtonAddRow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Header10.setBackground(java.awt.SystemColor.controlHighlight);
        Header10.setPreferredSize(new java.awt.Dimension(708, 50));

        TitleText10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        TitleText10.setForeground(new java.awt.Color(10, 10, 10));
        TitleText10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleText10.setText("FIR's");

        jButton14.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        jButton14.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jButton14.setForeground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        jButton14.setText("X");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        ButtonCancel10.setText("Go Back");
        ButtonCancel10.setOpaque(true);
        ButtonCancel10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCancel10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Header10Layout = new javax.swing.GroupLayout(Header10);
        Header10.setLayout(Header10Layout);
        Header10Layout.setHorizontalGroup(
            Header10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Header10Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(ButtonCancel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TitleText10, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                .addGap(45, 45, 45)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        Header10Layout.setVerticalGroup(
            Header10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Header10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Header10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleText10)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCancel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        ButtonMakeFile.setText("Make File");
        ButtonMakeFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMakeFileActionPerformed(evt);
            }
        });

        EmpDataTable.setModel(FIRModel);
        EmpDataTable.setIntercellSpacing(new java.awt.Dimension(2, 2));

        ButtonAddRow.setText("Add Row");
        ButtonAddRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddRowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonAddRow)
                        .addGap(18, 18, 18)
                        .addComponent(ButtonMakeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(EmpDataTable, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(Header10, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE)
                    .addGap(12, 12, 12)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addComponent(EmpDataTable, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonMakeFile)
                    .addComponent(ButtonAddRow))
                .addGap(13, 13, 13))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Header10, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(406, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed

        dispose();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void ButtonCancel10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCancel10ActionPerformed

        dispose();
        new ViewCases().setVisible(true);
    }//GEN-LAST:event_ButtonCancel10ActionPerformed

    private void ButtonMakeFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMakeFileActionPerformed

        File file = new File("data.csv");
        loadCSVFile(file, FIRModel);
    }//GEN-LAST:event_ButtonMakeFileActionPerformed

    private void ButtonAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddRowActionPerformed

        addNewRow(FIRModel);
    }//GEN-LAST:event_ButtonAddRowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewFIR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewFIR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAddRow;
    private javax.swing.JButton ButtonCancel10;
    private javax.swing.JButton ButtonMakeFile;
    private javax.swing.JTable EmpDataTable;
    private javax.swing.JPanel Header10;
    private javax.swing.JLabel TitleText10;
    private javax.swing.JButton jButton14;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

   
    
    private List<String[]> readCSV(String filePath) throws IOException {
        List<String[]> data = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] values = line.split(",");
                data.add(values);
            }
        }
        return data;
    }
}
